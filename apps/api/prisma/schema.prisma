// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Counter {
  id                Int               @id @default(autoincrement())
  number            Int               @unique

  // relazione inversa verso COUNTER_SERVICE
  counterServices CounterService[]

  // relazione inversa verso TICKET
  tickets        Ticket[]
}

model Service {
  id                Int               @id @default(autoincrement())
  name              String
  avgServiceTime    Int

  // relazione inversa verso COUNTER_SERVICE
  counterServices CounterService[]

  // relazione inversa verso TICKET
  tickets        Ticket[]
}

model CounterService {
  counterId Int
  serviceId Int

  counter Counter @relation(fields: [counterId], references: [id])
  service Service @relation(fields: [serviceId], references: [id])

  @@id([counterId, serviceId])
}

enum TicketStatus {
  WAITING
  SERVING
  SERVED
}

model Ticket {
  id            Int      @id @default(autoincrement())  
  ticketNumber  String   @unique
  startTime     DateTime
  endTime       DateTime?  
  serviceId     Int
  service       Service  @relation(fields: [serviceId], references: [id])
  counterId     Int?
  counter       Counter? @relation(fields: [counterId], references: [id])
  status        TicketStatus @default(WAITING)
}